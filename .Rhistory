')
joined <- st_demos %>%
dplyr::left_join(orgs, by = c("state_school" = "state_school_code"))
return(joined)
}
tst <- fetch_school_demos(2017)
library(tidyverse)
library(janitor)
tst <- fetch_school_demos(2018)
View(tst)
tst %>%
count(sex)
tst %>%
count(sex) %>%
add_count(wt = n, name = "total")
tst %>%
count(sex, name = "group_n") %>%
add_count(wt = n, name = "total_n") %>%
mutate(perc = group_n/total_n)
tst %>%
count(sex, name = "group_n") %>%
add_count(wt = n, name = "total_n") %>%
mutate(perc = group_n/total_n)
tst %>%
count(sex, name = "group_n") %>%
add_count(wt = group_n, name = "total_n") %>%
mutate(perc = group_n/total_n)
tst %>%
count(sex, name = "group_n") %>%
add_count(wt = group_n, name = "total_n") %>%
mutate(perc = group_n/total_n) %>%
select(key = sex,
perc)
get_percs <- function(df, groupvar, ...) {
df %>%
dplyr::count(.data[[groupvar]], ..., name = "group_n") %>%
dplyr::add_count(..., wt = group_n, name = "total_n") %>%
dplyr::mutate(perc = group_n/total_n) %>%
select(...,
key = .data[[groupvar]],
perc)
}
get_percs(tst, groupvar = "sex", sch_name, state_school) %>% View()
tst2 <- map(c("sex", "ethnic"), ~get_percs(groupvar = .x, df = tst, sch_name, state_school))
tst2 %>% bind_rows() %>%
View()
#'
#' ex <- odbc::dbGetQuery(con, 'SELECT *
#' FROM [CCPS_Shared].[CCPS_Shared].[RE_Students]
#' WHERE School_Year = 2019')
#'
#' ex %>%
#' clean_names() %>%
#' recode_demos()
#'
#' }
recode_demos <- function(df, speced = indicator_speced, ell = ell_status, gate = ccps_gate,
sex = sex) {
df %>%
dplyr::mutate({{ speced }} := dplyr::if_else({{ speced }} == "N", "Not_SPED", "SPED"),
{{ ell }} := dplyr::if_else({{ ell }} == "N", "Not_ELL", "ELL"),
{{ gate }} := dplyr::if_else({{ gate }} == "Y", "Gifted", "Not_Gifted"),
{{ sex }} := dplyr::if_else({{sex }} == "M", "Male", "Female"))
}
?tidyr::pivot_wider
#' school levels/types, grades, etc.
#'
#' @param df data
#' @param demovar a string. Variable to get demographics for (e.g. sex, ethnicity)
#' @param ... grouping variable(s)
#'
#' @return
#' @export
#'
#' @examples
summarize_schl_demos <- function(df, demovar, ...) {
df %>%
dplyr::count(.data[[demovar]], ..., name = "group_n") %>%
dplyr::add_count(..., wt = group_n, name = "total_n") %>%
dplyr::mutate(perc = group_n/total_n) %>%
select(...,
key = .data[[demovar]],
perc) %>%
tidyr::pivot_wider(
names_from = key,
values_from = perc
) %>%
janitor::clean_names()
}
#' school levels/types, grades, etc.
#'
#' @param df data
#' @param demovar a string. Variable to get demographics for (e.g. sex, ethnicity)
#' @param ... grouping variable(s)
#'
#' @return
#' @export
#'
#' @examples
fetch_school_demos <- function(df, demovar, ...) {
df %>%
dplyr::count(.data[[demovar]], ..., name = "group_n") %>%
dplyr::add_count(..., wt = group_n, name = "total_n") %>%
dplyr::mutate(perc = group_n/total_n) %>%
select(...,
key = .data[[demovar]],
perc)
}
View(tst)
yy <- map(c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate"),
~fetch_school_demos(df = tst, demovar = .x, sch_name, state_school))
yy <- map(c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate"),
~fetch_school_demos(df = tst, demovar = .x, sch_name, state_school)) %>%
bind_rows()
?pivot_wider
yy <- map(c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate"),
~fetch_school_demos(df = tst, demovar = .x, sch_name, state_school)) %>%
bind_rows() %>%
pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
clean_names()
View(yy)
?replace_na
yy <- map(c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate"),
~fetch_school_demos(df = tst, demovar = .x, sch_name, state_school)) %>%
bind_rows() %>%
pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
clean_names() %>%
mutate(across(where(is.numeric), ~replace_na(., 0))) %>%
View()
?bind_rows
?where
#' school levels/types, grades, etc.
#'
#' @param df data
#' @param demovar a string. Variable to get demographics for (e.g. sex, ethnicity)
#' @param ... grouping variable(s)
#'
#' @return
#' @export
#'
#' @examples
get_single_demo <- function(df, demovar, ...) {
df %>%
dplyr::count(.data[[demovar]], ..., name = "group_n") %>%
dplyr::add_count(..., wt = group_n, name = "total_n") %>%
dplyr::mutate(perc = group_n/total_n) %>%
select(...,
key = .data[[demovar]],
perc)
}
summarize_school_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x, ...)) %>%
dplyr::bind_rows() %>%
tidyr::pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
janitor::clean_names() %>%
dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
testers <- c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate")
xx <- summarize_schl_demos(testers, tst, sch_name, state_school)
yy <- map(c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate"),
~get_single_demo(df = tst, demovar = .x, sch_name, state_school)) %>%
bind_rows() %>%
pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
clean_names() %>%
mutate(across(where(is.numeric), ~replace_na(., 0))) %>%
View()
summarize_school_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x)) %>%
dplyr::bind_rows() %>%
tidyr::pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
janitor::clean_names() %>%
dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
xx <- summarize_schl_demos(testers, tst, sch_name, state_school)
rlang::last_error()
rlang::last_trace()
#' school levels/types, grades, etc.
#'
#' @param df data
#' @param demovar a string. Variable to get demographics for (e.g. sex, ethnicity)
#' @param ... grouping variable(s)
#'
#' @return
#' @export
#'
#' @examples
get_single_demo <- function(df, demovar, ...) {
df %>%
dplyr::count(.data[[demovar]], ...) %>%
dplyr::add_count(..., wt = n) %>%
dplyr::mutate(perc = n/nn) %>%
select(...,
key = .data[[demovar]],
perc)
}
yy <- map(c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate"),
~get_single_demo(df = tst, demovar = .x, sch_name, state_school)) %>%
bind_rows() %>%
pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
clean_names() %>%
mutate(across(where(is.numeric), ~replace_na(., 0))) %>%
View()
summarize_level_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x, ...)) %>%
dplyr::bind_rows() %>%
tidyr::pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
janitor::clean_names() %>%
dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
xx <- summarize_schl_demos(df = tst, demos = testers, sch_name, state_school)
library(tidyverse)
library(magrittr)
df <- tibble(one.x = c(1,2,3,4),
one.y = c(2,2,4,3),
two.x = c(5,6,7,8),
two.y = c(6,7,7,9),
# not used but also in df
extra = c(5,5,5,5))
df %>% mutate_at( vars(one.x, two.x),
funs(suffix = case_when(
. == !!sym("one.y") ~ "same",
TRUE ~ "different")))
df %>% mutate_at( vars(one.x, two.x),
funs(suffix = case_when(
. == !!substitute(.) ~ "same",
TRUE ~ "different")))
?exec
get_single_demo <- function(df, demovar, ...) {
df %>%
dplyr::count(.data[[demovar]], ...) %>%
dplyr::add_count(..., wt = n) %>%
dplyr::mutate(perc = n/nn) %>%
select(...,
key = .data[[demovar]],
perc)
}
summarize_level_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x, ...)) #%>%
#dplyr::bind_rows() %>%
#tidyr::pivot_wider(
#  names_from = key,
#  values_from = perc,
#  names_prefix = "sch_perc_"
#) %>%
#janitor::clean_names() %>%
#dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
testers <- c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate")
tst <- fetch_school_demos(2018)
tst <- ccpsr::fetch_school_demos(2018)
fetch_school_demos <- function(year) {
con <- ccpsr::set_con()
#getting fall membership students, including PK
tmp <- odbc::dbGetQuery(con, paste0('
SELECT StudentId
FROM [CCPS_Shared].[SCHOOLS\\Susan_Kvaven].[SRC_FALL_', year, ']
WHERE ActiveStat = \'A\'
AND (ServDiv = 021
OR Tuition in (\'3\', \'7\')
)
AND FTE in (\'\')
'
)) %>%
dplyr::pull()
#including student demographic data
st_demos <- odbc::dbGetQuery(con, paste0(
'SELECT Student_id,
State_id,
State_School,
Sex,
Ethnic,
Hispanic_Latino,
Ell_Status,
INDICATOR_SPECED,
CCPS_Gate,
School,
STATUS
FROM [CCPS_Shared].[CCPS_Shared].[RE_Students]
WHERE School_Year = ', year
)) %>%
dplyr::filter(Student_id %in% tmp) %>%
tibble::as_tibble() %>%
janitor::clean_names() %>%
ccpsr::recode_ethnicity() %>%
ccpsr::recode_demos()
orgs <- odbc::dbGetQuery(con, '
SELECT ORGANIZATION_NAME as sch_name,
SCHOOL_TYPE as sch_type,
STATE_SCHOOL_CODE as state_school_code
FROM [CCPS_Shared].[CCPS_Shared].[RE_Organizations]
')
joined <- st_demos %>%
dplyr::left_join(orgs, by = c("state_school" = "state_school_code"))
return(joined)
}
tst <-fetch_school_demos(2018)
get_single_demo(tst, "sex", sch_name, state_school) %>%
View()
summarize_level_demos(df = tst, demos = testers)
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name)
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name, state_school)
summarize_level_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x, ...)) %>%
dplyr::bind_rows() #%>%
#tidyr::pivot_wider(
#  names_from = key,
#  values_from = perc,
#  names_prefix = "sch_perc_"
#) %>%
#janitor::clean_names() %>%
#dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name, state_school)
summarize_level_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x, ...)) %>%
dplyr::bind_rows() #%>%
tidyr::pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) #%>%
#janitor::clean_names() %>%
#dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name, state_school)
View(tst2)
summarize_level_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x, ...)) %>%
dplyr::bind_rows() %>%
tidyr::pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) #%>%
#janitor::clean_names() %>%
#dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name, state_school)
View(tst2)
summarize_level_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x, ...)) #%>%
#dplyr::bind_rows() %>%
#tidyr::pivot_wider(
#  names_from = key,
#  values_from = perc,
#  names_prefix = "sch_perc_"
#) #%>%
#janitor::clean_names() %>%
#dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
get_single_demo(tst, "sex", sch_name, state_school) %>%
View()
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name, state_school)
View(tst2)
summarize_level_demos <- function(df, demos, ...) {
purrr::map(demos, ~get_single_demo(df = df, demovar = .x)) #%>%
#dplyr::bind_rows() %>%
#tidyr::pivot_wider(
#  names_from = key,
#  values_from = perc,
#  names_prefix = "sch_perc_"
#) #%>%
#janitor::clean_names() %>%
#dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name, state_school)
View(tst2)
myfun <- function(fn, args) exec(fn, !!!args)
summarize_level_demos <- function(demos, ...) {
purrr::map(demos, ~get_single_demo(demovar = .x, ...)) #%>%
#dplyr::bind_rows() %>%
#tidyr::pivot_wider(
#  names_from = key,
#  values_from = perc,
#  names_prefix = "sch_perc_"
#) #%>%
#janitor::clean_names() %>%
#dplyr::mutate(dplyr::across(tidyselect::where(is.numeric), ~tidyr::replace_na(., 0)))
}
tst2 <- summarize_level_demos(df = tst, demos = testers, sch_name, state_school)
tst2 <- summarize_level_demos(demos = testers, df = tst, sch_name, state_school)
fetch_school_demos <- function(year) {
con <- ccpsr::set_con()
#getting fall membership students, including PK
tmp <- odbc::dbGetQuery(con, paste0('
SELECT StudentId
FROM [CCPS_Shared].[SCHOOLS\\Susan_Kvaven].[SRC_FALL_', year, ']
WHERE ActiveStat = \'A\'
AND (ServDiv = 021
OR Tuition in (\'3\', \'7\')
)
AND FTE in (\'\')
'
)) %>%
dplyr::pull()
#including student demographic data
st_demos <- odbc::dbGetQuery(con, paste0(
'SELECT Student_id,
State_id,
State_School,
Sex,
Ethnic,
Hispanic_Latino,
Ell_Status,
INDICATOR_SPECED,
CCPS_Gate,
School,
STATUS
FROM [CCPS_Shared].[CCPS_Shared].[RE_Students]
WHERE School_Year = ', year
)) %>%
dplyr::filter(Student_id %in% tmp) %>%
tibble::as_tibble() %>%
janitor::clean_names() %>%
ccpsr::recode_ethnicity() %>%
ccpsr::recode_demos()
orgs <- odbc::dbGetQuery(con, '
SELECT ORGANIZATION_NAME as sch_name,
SCHOOL_TYPE as sch_type,
STATE_SCHOOL_CODE as state_school_code
FROM [CCPS_Shared].[CCPS_Shared].[RE_Organizations]
')
joined <- st_demos %>%
dplyr::left_join(orgs, by = c("state_school" = "state_school_code"))
#demographics to get
demo_vec <- c("sex", "ethnic", "indicator_speced", "ell_status", "ccps_gate")
ret <- map(demo_vec,
~get_single_demo(df = joined, demovar = .x, sch_name, state_school)) %>%
bind_rows() %>%
pivot_wider(
names_from = key,
values_from = perc,
names_prefix = "sch_perc_"
) %>%
clean_names() %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))
return(ret)
}
yy <- fetch_school_demos(2018)
View(yy)
devtools::document()
devtools::load_all()
devtools::document()
devtools::install()
library(tidyverse)
con <- ccpsr::set_con()
secondary_school_codes <- odbc::dbGetQuery(con, '
SELECT SCHOOL_CODE
FROM [CCPS_Shared].[CCPS_Shared].[RE_Organizations]
WHERE (SCHOOL_TYPE NOT LIKE \'1%\' AND SCHOOL_TYPE NOT LIKE \'7%\' AND SCHOOL_TYPE NOT LIKE \'8%\'
AND SCHOOL_TYPE NOT LIKE \'Chester%\')
') %>%
tibble::as_tibble() %>%
dplyr::pull()
library(tidyverse)
con <- ccpsr::set_con()
secondary_school_codes <- odbc::dbGetQuery(con, '
SELECT SCHOOL_CODE
FROM [CCPS_Shared].[CCPS_Shared].[RE_Organizations]
WHERE (SCHOOL_TYPE NOT LIKE \'1%\' AND SCHOOL_TYPE NOT LIKE \'7%\' AND SCHOOL_TYPE NOT LIKE \'8%\'
AND SCHOOL_TYPE NOT LIKE \'Chester%\')
') %>%
tibble::as_tibble() %>%
dplyr::pull()
#writing out
save(secondary_school_codes, file = here::here("data/secondary_school_codes.RData"))
devtools::load_all()
devtools::check()
devtools::install()
?ccpsr::secondary_school_codes
library(readxl)
course_codes_lookup <- read_excel("~/Data Codebooks/class code prefix lookup.xlsx")
glimpse(course_codes_lookup)
dplyr::glimpse(course_codes_lookup)
save(course_codes_lookup, file = here::here("data/course_codes_lookup.RData"))
library(tidyverse)
course_codes_lookup <- read_excel("~/Data Codebooks/class code prefix lookup.xlsx") %>%
mutate(specialty_center_domain = if_else(specialty_center_domain == "Y", TRUE, FALSE))
save(course_codes_lookup, file = here::here("data/course_codes_lookup.RData"))
devtools::load_all
devtools::load_all()
devtools::document()
?devtools::build()
devtools::install()
